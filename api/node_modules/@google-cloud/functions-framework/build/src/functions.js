"use strict";
// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonInvocationFormat = void 0;
/**
 * Default invocation format for JSON requests.
 * @public
 */
class JsonInvocationFormat {
    deserializeRequest(request) {
        const body = request.body();
        if (typeof body !== 'string') {
            throw new Error('Unsupported Content-Type, expected application/json');
        }
        try {
            return JSON.parse(body);
        }
        catch (e) {
            throw new Error('Failed to parse malformatted JSON in request: ' +
                e.message);
        }
    }
    serializeResponse(responseWriter, response) {
        responseWriter.setHeader('content-type', 'application/json');
        responseWriter.end(JSON.stringify(response));
    }
}
exports.JsonInvocationFormat = JsonInvocationFormat;
//# sourceMappingURL=functions.js.map